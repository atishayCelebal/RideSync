version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: ridesync-postgres
    environment:
      - POSTGRES_DB=ridesync
      - POSTGRES_USER=ridesync
      - POSTGRES_PASSWORD=ridesync
    ports:
      - "5433:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ridesync -d ridesync"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - ridesync_net

  kafka:
    image: bitnami/kafka:3.7
    container_name: ridesync-kafka
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@localhost:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,PLAINTEXT_HOST://:29092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://ridesync-kafka:9092,PLAINTEXT_HOST://localhost:29092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,CONTROLLER:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - ALLOW_PLAINTEXT_LISTENER=yes
    volumes:
      - kafka_data:/bitnami/kafka
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics.sh --bootstrap-server localhost:9092 --list || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      - ridesync_net
    depends_on:
      - postgres

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: ridesync-kafka-ui
    ports:
      - "8088:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=ridesync-kafka:9092
    depends_on:
      kafka:
        condition: service_started
    networks:
      - ridesync_net

volumes:
  pg_data:
  kafka_data:

networks:
  ridesync_net:
    driver: bridge


